{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c0f47e33_75cd5d16",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2022-06-03T18:19:45Z",
      "side": 1,
      "message": "is this intentional? Why phosphor \u0027p\u0027 is converted to _70",
      "range": {
        "startLine": 18,
        "startChar": 39,
        "endLine": 18,
        "endChar": 42
      },
      "revId": "4b8637db4280dde044ec37535c3f379362ed3b7c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e9ca60c_33e6dd4c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-06-04T05:06:41Z",
      "side": 1,
      "message": "Yes that\u0027s the expected behavior of sdbusplus::message::object_path. When appending a name with special characters to a existing path, it automatically escapes these special characters and the first character (to mark that path is encoded by sdbusplus).\n\nThe implementation can be found at: https://github.com/openbmc/sdbusplus/blob/2dcf64bf84650791f2ad56fd07284806935eb42d/src/message/native_types.cpp#L120\n\nThese unit test code illustrates how it works: https://github.com/openbmc/sdbusplus/blob/8db46a0fb0984f807f7e3b5c611af1ed31b17557/test/message/types.cpp#L76 \n\nThe reason why uses sdbusplus to encode instead of encoding manually (like now) is to make it more general for other applications\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/51753/comments/21652c98_51f0a478",
      "parentUuid": "c0f47e33_75cd5d16",
      "range": {
        "startLine": 18,
        "startChar": 39,
        "endLine": 18,
        "endChar": 42
      },
      "revId": "4b8637db4280dde044ec37535c3f379362ed3b7c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e1cdaab_28d25afb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2022-06-06T02:17:18Z",
      "side": 1,
      "message": "got it.",
      "parentUuid": "3e9ca60c_33e6dd4c",
      "range": {
        "startLine": 18,
        "startChar": 39,
        "endLine": 18,
        "endChar": 42
      },
      "revId": "4b8637db4280dde044ec37535c3f379362ed3b7c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66d830af_d2736039",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-05-18T10:08:15Z",
      "side": 1,
      "message": "Any updates?",
      "revId": "4b8637db4280dde044ec37535c3f379362ed3b7c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}