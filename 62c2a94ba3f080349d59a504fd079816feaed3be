{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "422d078b_21b96644",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-10T15:03:39Z",
      "side": 1,
      "message": "These commands functionally just use symlinks on the systemd service files;  Could we track the state in a similar way so we\u0027re not inventing a different file format?\n\nI could see a case where someone disables a service, then reboots, expecting the service to be enabled, but srvcfg-mgr has persisted the opposite, so the service reenables.  That seems like worse unexpected behavior.",
      "range": {
        "startLine": 14,
        "startChar": 41,
        "endLine": 15,
        "endChar": 9
      },
      "revId": "62c2a94ba3f080349d59a504fd079816feaed3be",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7062a85_827b4ff3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-06-10T20:45:41Z",
      "side": 1,
      "message": "Ahh interesting perspective. For me, it\u0027s the opposite. We have the formal REST API for enabling/disabling services (which goes through the official d-bus API\u0027s into service-config-manager). To me that is the source of truth. If we have a product engineer (or developer in the lab) mucking around on a system using systemctl and other command line mechanisms to debug something, I want the system to go back to the source of truth after a BMC reboot.\n\nMy proposal here is a change in behavior though so I understand if the preference here is that I enable this new \"persistence\" feature via a meson build option.",
      "parentUuid": "422d078b_21b96644",
      "range": {
        "startLine": 14,
        "startChar": 41,
        "endLine": 15,
        "endChar": 9
      },
      "revId": "62c2a94ba3f080349d59a504fd079816feaed3be",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc9942ad_3a605725",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-11T00:30:29Z",
      "side": 1,
      "message": "The way I always thought of this service was that this was just adding \"easy buttons\" to dbus but systemd was always the source of truth for whether a service was enabled/disabled.  The REST API should directly reflect the same thing as systemd status, although indirectly through this service so it can track some amount of intent (is this service disabled, or is this service crashed).",
      "parentUuid": "b7062a85_827b4ff3",
      "range": {
        "startLine": 14,
        "startChar": 41,
        "endLine": 15,
        "endChar": 9
      },
      "revId": "62c2a94ba3f080349d59a504fd079816feaed3be",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2eb6e2b5_1981ec2f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-11T00:32:23Z",
      "side": 1,
      "message": "if it worked that way, and someone disabled a service, it could be reenabled through the REST API in the same way, right?",
      "parentUuid": "dc9942ad_3a605725",
      "range": {
        "startLine": 14,
        "startChar": 41,
        "endLine": 15,
        "endChar": 9
      },
      "revId": "62c2a94ba3f080349d59a504fd079816feaed3be",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbced67f_fbb4338e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-06-11T18:13:38Z",
      "side": 1,
      "message": "I see. So if I\u0027m reading the code correctly, it doesn\u0027t currently handle people doing live systemctl changes to services via the command line. There would be a mismatch between what\u0027s on dbus from service-config-manager and what systemd has. If you reboot the BMC or restart the service it would pick up the new changes. \n\nMaybe a happy compromise is that I add support to monitor for systemd changes to the service and ensure d-bus is up to date? Then we can be confident what is written to the persistent setting is what systemd has?\n\nMy main goal with these commits is to support a redundant BMC design where we can replicate the service settings to a passive BMC and have it ensure that the correct services are enabled/disabled based on what the primary BMC had set.",
      "parentUuid": "2eb6e2b5_1981ec2f",
      "range": {
        "startLine": 14,
        "startChar": 41,
        "endLine": 15,
        "endChar": 9
      },
      "revId": "62c2a94ba3f080349d59a504fd079816feaed3be",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e72bd55_9e1c4198",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-07-29T19:23:25Z",
      "side": 1,
      "message": "Went back and forth on this for a bit and in the end I think it\u0027s best to just make this new \"persist\" feature something that\u0027s configurable. Enabled by default here in meson for CI purposes but disabled by default in the bitbake recipe so we just keep the existing design as the default.",
      "parentUuid": "bbced67f_fbb4338e",
      "range": {
        "startLine": 14,
        "startChar": 41,
        "endLine": 15,
        "endChar": 9
      },
      "revId": "62c2a94ba3f080349d59a504fd079816feaed3be",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "344ecf57_4ef42af7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-08-25T16:01:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e72bd55_9e1c4198",
      "range": {
        "startLine": 14,
        "startChar": 41,
        "endLine": 15,
        "endChar": 9
      },
      "revId": "62c2a94ba3f080349d59a504fd079816feaed3be",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa92aac6_5bada34d",
        "filename": "src/srvcfg_manager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 326,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-10T15:04:54Z",
      "side": 1,
      "message": "(thinking out loud) I wonder if we should drop the cereal dependency here for nlohmann.  somewhat unrelated to your commit.",
      "range": {
        "startLine": 326,
        "startChar": 12,
        "endLine": 326,
        "endChar": 22
      },
      "revId": "62c2a94ba3f080349d59a504fd079816feaed3be",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04de010f_843652b7",
        "filename": "src/srvcfg_manager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 326,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-06-10T20:45:41Z",
      "side": 1,
      "message": "Yeah, let me look into what it takes to just use nlohmann.",
      "parentUuid": "aa92aac6_5bada34d",
      "range": {
        "startLine": 326,
        "startChar": 12,
        "endLine": 326,
        "endChar": 22
      },
      "revId": "62c2a94ba3f080349d59a504fd079816feaed3be",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10929e96_a614afec",
        "filename": "src/srvcfg_manager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 326,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-07-29T19:23:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04de010f_843652b7",
      "range": {
        "startLine": 326,
        "startChar": 12,
        "endLine": 326,
        "endChar": 22
      },
      "revId": "62c2a94ba3f080349d59a504fd079816feaed3be",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}